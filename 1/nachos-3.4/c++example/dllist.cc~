#include "dllist.h"

DLLElement:: DLLElement(void *itemPtr, int sortKey){
	key = sortKey;
	item = itemPtr;
	next = NULL;
	prev = NULL;
}

DLList:: DLList(){
	first = last = NULL;
}

DLList:: ~DLList() {
	while(!IsEmpty()) {
		(void) Remove();
	}
}

void
DLList:: Prepend(void *item) {
	if (!IsEmpty()){//不为空的情况
		DLLElement * element = new DLLElement(item, (first->key) - 1);
		element->next = first;
		first->prev = element;
		first = element;
	}
	else{//当前链表内为空
		DLLElement * element = new DLLElement(item, 0);//先随便设为0
		first = element;
		last = element;
	}
}

void
DLList:: Append(void *item) {
	if (IsEmpty()){//为空，随便加进去
		DLLElement * element = new DLLElement(item, 0);
		last = first = element;
	}
	else {//不为空，插入到最后
		DLLElement * element = new DLLElement(item, (last->key) + 1);
		element->prev = last;
		last->next = element;
		last = element;
	}
}

bool
DLList:: IsEmpty() {
	return (first == NULL);
}

void*
DLList:: Remove(int *keyPtr) {
	if (IsEmpty())
		return NULL;

	void *first_item;
	DLLElement * element = fist;//先把当前first保存

	*keyPtr = first->key;
	first_item = first->item;

	if (first == last)
		first = last = NULL;
	else {
		first->next->prev = NULL;
		first = first->next;
	}
	return element->item;
}

void
DLList:: SortedInsert(void *item, int sortKey) {
		
}

void *SortedRemove(int sortKey){

}
